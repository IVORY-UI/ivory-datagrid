import { Component, EventEmitter, Input, Output } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../../services/column-sizing.service";
import * as i2 from "@angular/common";
export class PresentableColumnControlsComponent {
    constructor(columnSizing) {
        this.columnSizing = columnSizing;
        this._showController = false;
        this.isDraggingOver = false;
        this.updatedColumns = new EventEmitter;
    }
    onDragStart(event, item) {
        console.log('drag started');
        this.draggingItem = item;
    }
    onDragOver(event) {
        event.preventDefault();
        console.log('dragging');
    }
    onDrop(event, index) {
        console.log('dropped', index);
        if (this.draggingItem) {
            const draggingIndex = this.columns.indexOf(this.draggingItem);
            if (draggingIndex > -1) {
                this.columns.splice(draggingIndex, 1);
                this.columns.splice(index, 0, this.draggingItem);
                this.draggingItem = null;
            }
        }
    }
    getDropIndex(event) {
        const target = event.target;
        const targetIndex = Array.from(target.parentNode.children).indexOf(target);
        return targetIndex;
    }
    toggleColumn(column) {
        column.visible = !column.visible;
        this.columnSizing.reCalcWidth.next(true);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.2.1", ngImport: i0, type: PresentableColumnControlsComponent, deps: [{ token: i1.ColumnSizingService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "17.2.1", type: PresentableColumnControlsComponent, selector: "presentable-column-controls", inputs: { columns: "columns" }, outputs: { updatedColumns: "updatedColumns" }, ngImport: i0, template: "<div class=\"ivpt-column-controller\">\n  <button class=\"ivpt-column-controller-handle\" (click)=\"_showController=!_showController\">\n    Columns\n  </button>\n  \n  <div \n    class=\"ivpt-column-controller-modal\"\n    [ngStyle]=\"{'visibility': _showController ? 'visible' : 'hidden'}\"\n  >\n    <div class=\"ivpt-column-select-container\">\n      @for (colItem of columns; track colItem; let i=$index) {\n        <div \n          class=\"ivpt-column-select-item\" \n          [ngClass]=\"{'highlighted': isDraggingOver}\"\n          [style.top.rem]=\"(i * 2.4)\"\n          draggable=\"true\"\n          (dragstart)=\"onDragStart($event, colItem)\"\n          (dragover)=\"onDragOver($event)\"\n          (drop)=\"onDrop($event, i)\"\n        >\n          <input \n            type=\"checkbox\" \n            id=\"colItem.field\" \n            value=\"colItem.field\" \n            [checked]=\"colItem.visible\"\n            (change)=\"toggleColumn(colItem)\"\n          >\n          <label for=\"colItem.field\">{{colItem.title}}</label>\n      </div>\n      }\n    </div>\n  </div>\n</div>\n", styles: ["*{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;-ms-box-sizing:border-box;box-sizing:border-box;color:#212529;font-size:14px}.ivpt-flex-cell{flex:1}.ivpt-select-cell{display:flex;width:36px;justify-content:center;align-items:center}.ivpt-button{border:none;border-radius:.25rem;background-color:#c8dbee;height:1.5rem;line-height:1.5rem;padding:0 .5rem;cursor:pointer}.ivpt-column-controller{display:flex;height:100%;align-items:center;padding:0 1rem}.ivpt-column-controller-handle{border:none;border-radius:.25rem;background-color:#c8dbee;height:1.5rem;line-height:1.5rem;padding:0 .5rem;cursor:pointer}.ivpt-column-controller-handle:hover,.ivpt-column-controller-handle:focus{background-color:#859fb4}.ivpt-column-controller-modal{position:absolute;top:45px;background-color:#fff;width:15rem;z-index:9999;right:0;height:calc(100% - 45px);border:1px solid #CDD4D9;border-radius:0 0 .4rem}.ivpt-column-controller .ivpt-column-select-container{position:relative;height:100%}.ivpt-column-controller .ivpt-column-select-item{cursor:move;position:absolute;left:.5rem;width:calc(100% - 1rem);height:2rem;border:1px solid #ccc;border-radius:5px;background-color:#eef3f8;transition:transform .2s ease-in-out}.ivpt-column-controller .ivpt-column-select-item label{padding-left:.5rem;line-height:2rem}\n"], dependencies: [{ kind: "directive", type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i2.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.2.1", ngImport: i0, type: PresentableColumnControlsComponent, decorators: [{
            type: Component,
            args: [{ selector: 'presentable-column-controls', template: "<div class=\"ivpt-column-controller\">\n  <button class=\"ivpt-column-controller-handle\" (click)=\"_showController=!_showController\">\n    Columns\n  </button>\n  \n  <div \n    class=\"ivpt-column-controller-modal\"\n    [ngStyle]=\"{'visibility': _showController ? 'visible' : 'hidden'}\"\n  >\n    <div class=\"ivpt-column-select-container\">\n      @for (colItem of columns; track colItem; let i=$index) {\n        <div \n          class=\"ivpt-column-select-item\" \n          [ngClass]=\"{'highlighted': isDraggingOver}\"\n          [style.top.rem]=\"(i * 2.4)\"\n          draggable=\"true\"\n          (dragstart)=\"onDragStart($event, colItem)\"\n          (dragover)=\"onDragOver($event)\"\n          (drop)=\"onDrop($event, i)\"\n        >\n          <input \n            type=\"checkbox\" \n            id=\"colItem.field\" \n            value=\"colItem.field\" \n            [checked]=\"colItem.visible\"\n            (change)=\"toggleColumn(colItem)\"\n          >\n          <label for=\"colItem.field\">{{colItem.title}}</label>\n      </div>\n      }\n    </div>\n  </div>\n</div>\n", styles: ["*{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;-ms-box-sizing:border-box;box-sizing:border-box;color:#212529;font-size:14px}.ivpt-flex-cell{flex:1}.ivpt-select-cell{display:flex;width:36px;justify-content:center;align-items:center}.ivpt-button{border:none;border-radius:.25rem;background-color:#c8dbee;height:1.5rem;line-height:1.5rem;padding:0 .5rem;cursor:pointer}.ivpt-column-controller{display:flex;height:100%;align-items:center;padding:0 1rem}.ivpt-column-controller-handle{border:none;border-radius:.25rem;background-color:#c8dbee;height:1.5rem;line-height:1.5rem;padding:0 .5rem;cursor:pointer}.ivpt-column-controller-handle:hover,.ivpt-column-controller-handle:focus{background-color:#859fb4}.ivpt-column-controller-modal{position:absolute;top:45px;background-color:#fff;width:15rem;z-index:9999;right:0;height:calc(100% - 45px);border:1px solid #CDD4D9;border-radius:0 0 .4rem}.ivpt-column-controller .ivpt-column-select-container{position:relative;height:100%}.ivpt-column-controller .ivpt-column-select-item{cursor:move;position:absolute;left:.5rem;width:calc(100% - 1rem);height:2rem;border:1px solid #ccc;border-radius:5px;background-color:#eef3f8;transition:transform .2s ease-in-out}.ivpt-column-controller .ivpt-column-select-item label{padding-left:.5rem;line-height:2rem}\n"] }]
        }], ctorParameters: () => [{ type: i1.ColumnSizingService }], propDecorators: { columns: [{
                type: Input
            }], updatedColumns: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJlc2VudGFibGUtY29sdW1uLWNvbnRyb2xzLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2l2b3J5LXByZXNlbnRhYmxlL3NyYy9saWIvY29tcG9uZW50cy9wcmVzZW50YWJsZS1jb2x1bW4tY29udHJvbHMvcHJlc2VudGFibGUtY29sdW1uLWNvbnRyb2xzLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2l2b3J5LXByZXNlbnRhYmxlL3NyYy9saWIvY29tcG9uZW50cy9wcmVzZW50YWJsZS1jb2x1bW4tY29udHJvbHMvcHJlc2VudGFibGUtY29sdW1uLWNvbnRyb2xzLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7QUFTdkUsTUFBTSxPQUFPLGtDQUFrQztJQVU3QyxZQUNTLFlBQWlDO1FBQWpDLGlCQUFZLEdBQVosWUFBWSxDQUFxQjtRQVQxQyxvQkFBZSxHQUFZLEtBQUssQ0FBQztRQUVqQyxtQkFBYyxHQUFHLEtBQUssQ0FBQztRQUliLG1CQUFjLEdBQUcsSUFBSSxZQUFZLENBQUM7SUFJekMsQ0FBQztJQUVKLFdBQVcsQ0FBQyxLQUFnQixFQUFFLElBQVM7UUFDckMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUMsQ0FBQztRQUM1QixJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQztJQUMzQixDQUFDO0lBRUQsVUFBVSxDQUFDLEtBQWdCO1FBQ3pCLEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUN2QixPQUFPLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQzFCLENBQUM7SUFFRCxNQUFNLENBQUMsS0FBZ0IsRUFBRSxLQUFhO1FBQ3BDLE9BQU8sQ0FBQyxHQUFHLENBQUMsU0FBUyxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQzlCLElBQUksSUFBSSxDQUFDLFlBQVksRUFBRTtZQUNyQixNQUFNLGFBQWEsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7WUFDOUQsSUFBSSxhQUFhLEdBQUcsQ0FBQyxDQUFDLEVBQUU7Z0JBQ3RCLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLGFBQWEsRUFBRSxDQUFDLENBQUMsQ0FBQztnQkFDdEMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLENBQUMsRUFBRSxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7Z0JBQ2pELElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDO2FBQzFCO1NBQ0Y7SUFDSCxDQUFDO0lBRUQsWUFBWSxDQUFDLEtBQVU7UUFDckIsTUFBTSxNQUFNLEdBQUcsS0FBSyxDQUFDLE1BQXFCLENBQUM7UUFDM0MsTUFBTSxXQUFXLEdBQUcsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsVUFBVyxDQUFDLFFBQVEsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUM1RSxPQUFPLFdBQVcsQ0FBQztJQUNyQixDQUFDO0lBRUQsWUFBWSxDQUFDLE1BQVc7UUFDdEIsTUFBTSxDQUFDLE9BQU8sR0FBQyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUM7UUFDL0IsSUFBSSxDQUFDLFlBQVksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzNDLENBQUM7OEdBN0NVLGtDQUFrQztrR0FBbEMsa0NBQWtDLGtKQ1QvQywra0NBaUNBOzsyRkR4QmEsa0NBQWtDO2tCQUw5QyxTQUFTOytCQUNFLDZCQUE2Qjt3RkFVOUIsT0FBTztzQkFBZixLQUFLO2dCQUVJLGNBQWM7c0JBQXZCLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBDb2x1bW5TaXppbmdTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvY29sdW1uLXNpemluZy5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncHJlc2VudGFibGUtY29sdW1uLWNvbnRyb2xzJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3ByZXNlbnRhYmxlLWNvbHVtbi1jb250cm9scy5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsOiAnLi9wcmVzZW50YWJsZS1jb2x1bW4tY29udHJvbHMuY29tcG9uZW50LnNjc3MnXG59KVxuZXhwb3J0IGNsYXNzIFByZXNlbnRhYmxlQ29sdW1uQ29udHJvbHNDb21wb25lbnQge1xuXG4gIF9zaG93Q29udHJvbGxlcjogYm9vbGVhbiA9IGZhbHNlO1xuICBkcmFnZ2luZ0l0ZW06IGFueTtcbiAgaXNEcmFnZ2luZ092ZXIgPSBmYWxzZTtcblxuICBASW5wdXQoKSBjb2x1bW5zOiBhbnk7XG5cbiAgQE91dHB1dCgpIHVwZGF0ZWRDb2x1bW5zID0gbmV3IEV2ZW50RW1pdHRlcjsgXG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHVibGljIGNvbHVtblNpemluZzogQ29sdW1uU2l6aW5nU2VydmljZVxuICApIHt9XG5cbiAgb25EcmFnU3RhcnQoZXZlbnQ6IERyYWdFdmVudCwgaXRlbTogYW55KSB7XG4gICAgY29uc29sZS5sb2coJ2RyYWcgc3RhcnRlZCcpO1xuICAgIHRoaXMuZHJhZ2dpbmdJdGVtID0gaXRlbTtcbiAgfVxuXG4gIG9uRHJhZ092ZXIoZXZlbnQ6IERyYWdFdmVudCkge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgY29uc29sZS5sb2coJ2RyYWdnaW5nJyk7XG4gIH1cblxuICBvbkRyb3AoZXZlbnQ6IERyYWdFdmVudCwgaW5kZXg6IG51bWJlcikge1xuICAgIGNvbnNvbGUubG9nKCdkcm9wcGVkJywgaW5kZXgpO1xuICAgIGlmICh0aGlzLmRyYWdnaW5nSXRlbSkge1xuICAgICAgY29uc3QgZHJhZ2dpbmdJbmRleCA9IHRoaXMuY29sdW1ucy5pbmRleE9mKHRoaXMuZHJhZ2dpbmdJdGVtKTtcbiAgICAgIGlmIChkcmFnZ2luZ0luZGV4ID4gLTEpIHtcbiAgICAgICAgdGhpcy5jb2x1bW5zLnNwbGljZShkcmFnZ2luZ0luZGV4LCAxKTtcbiAgICAgICAgdGhpcy5jb2x1bW5zLnNwbGljZShpbmRleCwgMCwgdGhpcy5kcmFnZ2luZ0l0ZW0pO1xuICAgICAgICB0aGlzLmRyYWdnaW5nSXRlbSA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZ2V0RHJvcEluZGV4KGV2ZW50OiBhbnkpIHtcbiAgICBjb25zdCB0YXJnZXQgPSBldmVudC50YXJnZXQgYXMgSFRNTEVsZW1lbnQ7XG4gICAgY29uc3QgdGFyZ2V0SW5kZXggPSBBcnJheS5mcm9tKHRhcmdldC5wYXJlbnROb2RlIS5jaGlsZHJlbikuaW5kZXhPZih0YXJnZXQpO1xuICAgIHJldHVybiB0YXJnZXRJbmRleDtcbiAgfVxuXG4gIHRvZ2dsZUNvbHVtbihjb2x1bW46IGFueSkge1xuICAgIGNvbHVtbi52aXNpYmxlPSFjb2x1bW4udmlzaWJsZTtcbiAgICB0aGlzLmNvbHVtblNpemluZy5yZUNhbGNXaWR0aC5uZXh0KHRydWUpO1xuICB9XG5cbn1cbiIsIjxkaXYgY2xhc3M9XCJpdnB0LWNvbHVtbi1jb250cm9sbGVyXCI+XG4gIDxidXR0b24gY2xhc3M9XCJpdnB0LWNvbHVtbi1jb250cm9sbGVyLWhhbmRsZVwiIChjbGljayk9XCJfc2hvd0NvbnRyb2xsZXI9IV9zaG93Q29udHJvbGxlclwiPlxuICAgIENvbHVtbnNcbiAgPC9idXR0b24+XG4gIFxuICA8ZGl2IFxuICAgIGNsYXNzPVwiaXZwdC1jb2x1bW4tY29udHJvbGxlci1tb2RhbFwiXG4gICAgW25nU3R5bGVdPVwieyd2aXNpYmlsaXR5JzogX3Nob3dDb250cm9sbGVyID8gJ3Zpc2libGUnIDogJ2hpZGRlbid9XCJcbiAgPlxuICAgIDxkaXYgY2xhc3M9XCJpdnB0LWNvbHVtbi1zZWxlY3QtY29udGFpbmVyXCI+XG4gICAgICBAZm9yIChjb2xJdGVtIG9mIGNvbHVtbnM7IHRyYWNrIGNvbEl0ZW07IGxldCBpPSRpbmRleCkge1xuICAgICAgICA8ZGl2IFxuICAgICAgICAgIGNsYXNzPVwiaXZwdC1jb2x1bW4tc2VsZWN0LWl0ZW1cIiBcbiAgICAgICAgICBbbmdDbGFzc109XCJ7J2hpZ2hsaWdodGVkJzogaXNEcmFnZ2luZ092ZXJ9XCJcbiAgICAgICAgICBbc3R5bGUudG9wLnJlbV09XCIoaSAqIDIuNClcIlxuICAgICAgICAgIGRyYWdnYWJsZT1cInRydWVcIlxuICAgICAgICAgIChkcmFnc3RhcnQpPVwib25EcmFnU3RhcnQoJGV2ZW50LCBjb2xJdGVtKVwiXG4gICAgICAgICAgKGRyYWdvdmVyKT1cIm9uRHJhZ092ZXIoJGV2ZW50KVwiXG4gICAgICAgICAgKGRyb3ApPVwib25Ecm9wKCRldmVudCwgaSlcIlxuICAgICAgICA+XG4gICAgICAgICAgPGlucHV0IFxuICAgICAgICAgICAgdHlwZT1cImNoZWNrYm94XCIgXG4gICAgICAgICAgICBpZD1cImNvbEl0ZW0uZmllbGRcIiBcbiAgICAgICAgICAgIHZhbHVlPVwiY29sSXRlbS5maWVsZFwiIFxuICAgICAgICAgICAgW2NoZWNrZWRdPVwiY29sSXRlbS52aXNpYmxlXCJcbiAgICAgICAgICAgIChjaGFuZ2UpPVwidG9nZ2xlQ29sdW1uKGNvbEl0ZW0pXCJcbiAgICAgICAgICA+XG4gICAgICAgICAgPGxhYmVsIGZvcj1cImNvbEl0ZW0uZmllbGRcIj57e2NvbEl0ZW0udGl0bGV9fTwvbGFiZWw+XG4gICAgICA8L2Rpdj5cbiAgICAgIH1cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG48L2Rpdj5cbiJdfQ==
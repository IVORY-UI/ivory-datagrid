import { Component, Input, Output, EventEmitter } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../../services/page-manager.service";
import * as i2 from "@angular/forms";
export class PresentablePaginatorComponent {
    set recordsPerPageOptions(value) {
        this._records.options = value;
    }
    set recordsPerPage(value) {
        this._records.perPage = value;
    }
    set recordsTotal(value) {
        this._records.total = value;
        this._page.total = Math.ceil(this._records.total / this._records.perPage);
        this._showPagination = this._records.total > this._records.perPage;
    }
    constructor(pageManager) {
        this.pageManager = pageManager;
        this._showPagination = false;
        this._records = {};
        this._page = {
            'total': 1,
            'current': 1,
            'goto': 1
        };
        this.pageChange = new EventEmitter();
    }
    ngOnInit() {
        // The below current page subscription is being used only for the pagination reset usecase
        this.pageManager.currentPage$.subscribe((value) => {
            this._page.current = this._page.goto = value;
        });
    }
    updatePerPageRecords() {
        this._page.goto = this._page.current = 1;
        this._page.total = Math.ceil(this._records.total / this._records.perPage);
        this.pageChange.emit({ 'from': 1, 'to': this._records.perPage });
    }
    goto(pageNumber) {
        if (pageNumber !== null && pageNumber !== undefined && pageNumber !== this._page.current) {
            const startRecord = (pageNumber - 1) * this._records.perPage;
            const endRecord = ((startRecord + this._records.perPage) > this._records.total) ? this._records.total : startRecord + this._records.perPage;
            this.pageChange.emit({ 'from': startRecord, 'to': endRecord });
            this._page.goto = this._page.current = pageNumber;
        }
        else {
            if (this._page.goto < 1) {
                this._page.goto = 1;
            }
            else if (this._page.goto > this._page.total) {
                this._page.goto = this._page.total;
            }
            this.goto(this._page.goto);
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.2.1", ngImport: i0, type: PresentablePaginatorComponent, deps: [{ token: i1.PageManagerService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "17.2.1", type: PresentablePaginatorComponent, selector: "presentable-paginator", inputs: { recordsPerPageOptions: "recordsPerPageOptions", recordsPerPage: "recordsPerPage", recordsTotal: "recordsTotal" }, outputs: { pageChange: "pageChange" }, ngImport: i0, template: "<div class=\"ivpt-records-summary\" role=\"status\">\n  <span>\n    {{((_page.current-1)*_records.perPage)+1}}\n  </span>\n  &nbsp;\n  <span> to </span>\n  &nbsp;\n  <span>\n    @if (_records.total < (_page.current*_records.perPage)) {\n      {{_records.total}}\n    } @else {\n      {{_page.current * _records.perPage}}\n    }\n  </span>\n  &nbsp;\n  <span> of </span>\n  &nbsp;\n  <span>\n    {{_records.total}}\n  </span>\n</div>\n\n<div class=\"ivpt-records-options\" role=\"presentation\">\n  <label for=\"records-per-page\" aria-hidden=\"false\">\n    Records per page: \n  </label>\n  &nbsp;\n  <select name=\"perPageOptions\" \n    id=\"records-per-page\" \n    tabindex=\"0\"\n    [(ngModel)]=\"_records.perPage\" \n    (change)=\"updatePerPageRecords()\"\n  >\n    @for (p of _records.options; track p) {\n      <option [ngValue]=\"p\">\n        {{ p }}\n      </option>\n    }\n  </select>\n</div>\n\n<div class=\"ivpt-records-paging\">\n  @if (_showPagination) {\n    <button type=\"button\" \n      aria-label=\"First page\" \n      tabindex=\"0\"\n      class=\"ivpt-paginator-button\" \n      [disabled]=\"_page.current===1\"\n      [attr.aria-disabled]=\"_page.current===1\"\n      (click)=\"goto(1)\"\n    >\n      &laquo;\n    </button>\n    \n    <button type=\"button\" \n      aria-label=\"Previous page\" \n      tabindex=\"0\"\n      class=\"ivpt-paginator-button\" \n      [disabled]=\"_page.current===1\"\n      [attr.aria-disabled]=\"_page.current===1\" \n      (click)=\"goto(_page.current-1)\"\n    >\n      &lsaquo;\n    </button>\n\n    <input\n      class=\"ivpt-paging-input\"\n      type=\"number\"\n      size=\"2\"\n      [(ngModel)]=\"_page.goto\"\n      (keydown.enter)=\"goto(null)\"\n    />\n    <span>{{ ' / '+_page.total }}</span>\n\n    <button type=\"button\"\n      aria-label=\"Next page\" \n      tabindex=\"0\"\n      class=\"ivpt-paginator-button\" \n      [disabled]=\"_page.current===_page.total\" \n      [attr.aria-disabled]=\"_page.current===_page.total\" \n      (click)=\"goto(_page.current+1)\"\n    >\n      &rsaquo;\n    </button>\n\n    <button type=\"button\"\n      aria-label=\"Last page\" \n      tabindex=\"0\"\n      class=\"ivpt-paginator-button\" \n      [disabled]=\"_page.current===_page.total\" \n      [attr.aria-disabled]=\"_page.current===_page.total\" \n      (click)=\"goto(_page.total)\"\n    >\n      &raquo;\n    </button>\n  }\n</div>\n", styles: [".ivpt-records-paging,.ivpt-records-options,.ivpt-records-summary{display:flex;flex:1;align-items:center}:host{display:flex;width:100%;justify-content:space-between}.ivpt-records-options{justify-content:center}.ivpt-records-paging{justify-content:flex-end}.ivpt-paging-input{width:24px;margin:0 .5rem;-moz-appearance:textfield}.ivpt-paging-input::-webkit-inner-spin-button,.ivpt-paging-input::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}.ivpt-paginator-button{border:none;border-radius:.25rem;background-color:#c8dbee;height:1.5rem;line-height:1.5rem;padding:0 .5rem;cursor:pointer;margin:0 0 0 12px}.ivpt-paginator-button:hover,.ivpt-paginator-button:focus{background-color:#859fb4}\n"], dependencies: [{ kind: "directive", type: i2.NgSelectOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "directive", type: i2.ɵNgSelectMultipleOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "directive", type: i2.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i2.NumberValueAccessor, selector: "input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]" }, { kind: "directive", type: i2.SelectControlValueAccessor, selector: "select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]", inputs: ["compareWith"] }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.2.1", ngImport: i0, type: PresentablePaginatorComponent, decorators: [{
            type: Component,
            args: [{ selector: 'presentable-paginator', template: "<div class=\"ivpt-records-summary\" role=\"status\">\n  <span>\n    {{((_page.current-1)*_records.perPage)+1}}\n  </span>\n  &nbsp;\n  <span> to </span>\n  &nbsp;\n  <span>\n    @if (_records.total < (_page.current*_records.perPage)) {\n      {{_records.total}}\n    } @else {\n      {{_page.current * _records.perPage}}\n    }\n  </span>\n  &nbsp;\n  <span> of </span>\n  &nbsp;\n  <span>\n    {{_records.total}}\n  </span>\n</div>\n\n<div class=\"ivpt-records-options\" role=\"presentation\">\n  <label for=\"records-per-page\" aria-hidden=\"false\">\n    Records per page: \n  </label>\n  &nbsp;\n  <select name=\"perPageOptions\" \n    id=\"records-per-page\" \n    tabindex=\"0\"\n    [(ngModel)]=\"_records.perPage\" \n    (change)=\"updatePerPageRecords()\"\n  >\n    @for (p of _records.options; track p) {\n      <option [ngValue]=\"p\">\n        {{ p }}\n      </option>\n    }\n  </select>\n</div>\n\n<div class=\"ivpt-records-paging\">\n  @if (_showPagination) {\n    <button type=\"button\" \n      aria-label=\"First page\" \n      tabindex=\"0\"\n      class=\"ivpt-paginator-button\" \n      [disabled]=\"_page.current===1\"\n      [attr.aria-disabled]=\"_page.current===1\"\n      (click)=\"goto(1)\"\n    >\n      &laquo;\n    </button>\n    \n    <button type=\"button\" \n      aria-label=\"Previous page\" \n      tabindex=\"0\"\n      class=\"ivpt-paginator-button\" \n      [disabled]=\"_page.current===1\"\n      [attr.aria-disabled]=\"_page.current===1\" \n      (click)=\"goto(_page.current-1)\"\n    >\n      &lsaquo;\n    </button>\n\n    <input\n      class=\"ivpt-paging-input\"\n      type=\"number\"\n      size=\"2\"\n      [(ngModel)]=\"_page.goto\"\n      (keydown.enter)=\"goto(null)\"\n    />\n    <span>{{ ' / '+_page.total }}</span>\n\n    <button type=\"button\"\n      aria-label=\"Next page\" \n      tabindex=\"0\"\n      class=\"ivpt-paginator-button\" \n      [disabled]=\"_page.current===_page.total\" \n      [attr.aria-disabled]=\"_page.current===_page.total\" \n      (click)=\"goto(_page.current+1)\"\n    >\n      &rsaquo;\n    </button>\n\n    <button type=\"button\"\n      aria-label=\"Last page\" \n      tabindex=\"0\"\n      class=\"ivpt-paginator-button\" \n      [disabled]=\"_page.current===_page.total\" \n      [attr.aria-disabled]=\"_page.current===_page.total\" \n      (click)=\"goto(_page.total)\"\n    >\n      &raquo;\n    </button>\n  }\n</div>\n", styles: [".ivpt-records-paging,.ivpt-records-options,.ivpt-records-summary{display:flex;flex:1;align-items:center}:host{display:flex;width:100%;justify-content:space-between}.ivpt-records-options{justify-content:center}.ivpt-records-paging{justify-content:flex-end}.ivpt-paging-input{width:24px;margin:0 .5rem;-moz-appearance:textfield}.ivpt-paging-input::-webkit-inner-spin-button,.ivpt-paging-input::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}.ivpt-paginator-button{border:none;border-radius:.25rem;background-color:#c8dbee;height:1.5rem;line-height:1.5rem;padding:0 .5rem;cursor:pointer;margin:0 0 0 12px}.ivpt-paginator-button:hover,.ivpt-paginator-button:focus{background-color:#859fb4}\n"] }]
        }], ctorParameters: () => [{ type: i1.PageManagerService }], propDecorators: { recordsPerPageOptions: [{
                type: Input
            }], recordsPerPage: [{
                type: Input
            }], recordsTotal: [{
                type: Input
            }], pageChange: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,
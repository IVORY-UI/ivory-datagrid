import { Component, EventEmitter, Input, Output } from '@angular/core';
import * as i0 from "@angular/core";
export class PresentableRowComponent {
    constructor() {
        this.onSelection = new EventEmitter();
    }
    whenRowSelected($event, rowData) {
        this.onSelection.emit({ 'selected': $event.target.checked, 'row': rowData });
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.2.1", ngImport: i0, type: PresentableRowComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "17.2.1", type: PresentableRowComponent, selector: "presentable-row", inputs: { columns: "columns", rowIndex: "rowIndex", rowSelectionEnabled: "rowSelectionEnabled", rowData: "rowData" }, outputs: { onSelection: "onSelection" }, ngImport: i0, template: "<div \n  class=\"ivpt-content-row\" \n  role=\"row\"\n  attr.aria-rowindex=\"{{rowIndex+2}}\" \n  attr.row-index=\"{{rowIndex}}\"\n>\n  @if (rowSelectionEnabled) {\n    <div class=\"ivpt-content-cell\" style=\"width: 36px;\" role=\"gridcell\">\n      <div class=\"ivpt-row-select\" role=\"presentation\" style=\"width: inherit;\">\n        <input type=\"checkbox\"\n          class=\"ivpt-row-select-checkbox\"\n          tabindex=\"-1\"\n          name=\"dt_row_select\"\n          [checked]=\"rowData.dtSelected\"\n          (change)=\"whenRowSelected($event, rowData)\"\n        />\n      </div>\n    </div>\n  }\n  @for (colItem of columns; track colItem; let i=$index) {\n    @if (colItem.visible) {\n      <div \n        class=\"ivpt-content-cell\" \n        role=\"gridcell\" \n        attr.aria-colindex=\"{{i+1}}\" \n        [style.width.px]=\"colItem.width\"\n      >\n        {{rowData[colItem.field]}}\n      </div>\n    }  \n  }\n</div>\n", styles: ["*{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;-ms-box-sizing:border-box;box-sizing:border-box;color:#212529;font-size:14px}.ivpt-flex-cell{flex:1}.ivpt-select-cell{display:flex;width:36px;justify-content:center;align-items:center}.ivpt-button{border:none;border-radius:.25rem;background-color:#c8dbee;height:1.5rem;line-height:1.5rem;padding:0 .5rem;cursor:pointer}.ivpt-content-row{display:flex;flex-direction:row;flex-wrap:nowrap;border-bottom:1px solid #CDD4D9}.ivpt-content-row:hover{background-color:#eaf5ff}.ivpt-content-row .ivpt-content-cell{padding:0 .5rem;line-height:42px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;flex-shrink:0}\n"] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.2.1", ngImport: i0, type: PresentableRowComponent, decorators: [{
            type: Component,
            args: [{ selector: 'presentable-row', template: "<div \n  class=\"ivpt-content-row\" \n  role=\"row\"\n  attr.aria-rowindex=\"{{rowIndex+2}}\" \n  attr.row-index=\"{{rowIndex}}\"\n>\n  @if (rowSelectionEnabled) {\n    <div class=\"ivpt-content-cell\" style=\"width: 36px;\" role=\"gridcell\">\n      <div class=\"ivpt-row-select\" role=\"presentation\" style=\"width: inherit;\">\n        <input type=\"checkbox\"\n          class=\"ivpt-row-select-checkbox\"\n          tabindex=\"-1\"\n          name=\"dt_row_select\"\n          [checked]=\"rowData.dtSelected\"\n          (change)=\"whenRowSelected($event, rowData)\"\n        />\n      </div>\n    </div>\n  }\n  @for (colItem of columns; track colItem; let i=$index) {\n    @if (colItem.visible) {\n      <div \n        class=\"ivpt-content-cell\" \n        role=\"gridcell\" \n        attr.aria-colindex=\"{{i+1}}\" \n        [style.width.px]=\"colItem.width\"\n      >\n        {{rowData[colItem.field]}}\n      </div>\n    }  \n  }\n</div>\n", styles: ["*{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;-ms-box-sizing:border-box;box-sizing:border-box;color:#212529;font-size:14px}.ivpt-flex-cell{flex:1}.ivpt-select-cell{display:flex;width:36px;justify-content:center;align-items:center}.ivpt-button{border:none;border-radius:.25rem;background-color:#c8dbee;height:1.5rem;line-height:1.5rem;padding:0 .5rem;cursor:pointer}.ivpt-content-row{display:flex;flex-direction:row;flex-wrap:nowrap;border-bottom:1px solid #CDD4D9}.ivpt-content-row:hover{background-color:#eaf5ff}.ivpt-content-row .ivpt-content-cell{padding:0 .5rem;line-height:42px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;flex-shrink:0}\n"] }]
        }], propDecorators: { columns: [{
                type: Input
            }], rowIndex: [{
                type: Input
            }], rowSelectionEnabled: [{
                type: Input
            }], rowData: [{
                type: Input
            }], onSelection: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJlc2VudGFibGUtcm93LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2l2b3J5LXByZXNlbnRhYmxlL3NyYy9saWIvY29tcG9uZW50cy9wcmVzZW50YWJsZS1yb3cvcHJlc2VudGFibGUtcm93LmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2l2b3J5LXByZXNlbnRhYmxlL3NyYy9saWIvY29tcG9uZW50cy9wcmVzZW50YWJsZS1yb3cvcHJlc2VudGFibGUtcm93LmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7O0FBT3ZFLE1BQU0sT0FBTyx1QkFBdUI7SUFMcEM7UUFlWSxnQkFBVyxHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7S0FNakQ7SUFKQyxlQUFlLENBQUMsTUFBVyxFQUFFLE9BQVk7UUFDdkMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsRUFBQyxVQUFVLEVBQUUsTUFBTSxDQUFDLE1BQU0sQ0FBQyxPQUFPLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7SUFDN0UsQ0FBQzs4R0FkVSx1QkFBdUI7a0dBQXZCLHVCQUF1QixzTkNQcEMseTdCQWdDQTs7MkZEekJhLHVCQUF1QjtrQkFMbkMsU0FBUzsrQkFDRSxpQkFBaUI7OEJBTWxCLE9BQU87c0JBQWYsS0FBSztnQkFFRyxRQUFRO3NCQUFoQixLQUFLO2dCQUVHLG1CQUFtQjtzQkFBM0IsS0FBSztnQkFFRyxPQUFPO3NCQUFmLEtBQUs7Z0JBRUksV0FBVztzQkFBcEIsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3ByZXNlbnRhYmxlLXJvdycsXG4gIHRlbXBsYXRlVXJsOiAnLi9wcmVzZW50YWJsZS1yb3cuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybDogJy4vcHJlc2VudGFibGUtcm93LmNvbXBvbmVudC5zY3NzJ1xufSlcbmV4cG9ydCBjbGFzcyBQcmVzZW50YWJsZVJvd0NvbXBvbmVudCB7XG5cbiAgQElucHV0KCkgY29sdW1uczogYW55O1xuXG4gIEBJbnB1dCgpIHJvd0luZGV4OiBhbnk7XG5cbiAgQElucHV0KCkgcm93U2VsZWN0aW9uRW5hYmxlZDogYW55O1xuXG4gIEBJbnB1dCgpIHJvd0RhdGE6IGFueTtcblxuICBAT3V0cHV0KCkgb25TZWxlY3Rpb24gPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcblxuICB3aGVuUm93U2VsZWN0ZWQoJGV2ZW50OiBhbnksIHJvd0RhdGE6IGFueSkge1xuICAgIHRoaXMub25TZWxlY3Rpb24uZW1pdCh7J3NlbGVjdGVkJzogJGV2ZW50LnRhcmdldC5jaGVja2VkLCAncm93Jzogcm93RGF0YX0pO1xuICB9XG5cbn1cbiIsIjxkaXYgXG4gIGNsYXNzPVwiaXZwdC1jb250ZW50LXJvd1wiIFxuICByb2xlPVwicm93XCJcbiAgYXR0ci5hcmlhLXJvd2luZGV4PVwie3tyb3dJbmRleCsyfX1cIiBcbiAgYXR0ci5yb3ctaW5kZXg9XCJ7e3Jvd0luZGV4fX1cIlxuPlxuICBAaWYgKHJvd1NlbGVjdGlvbkVuYWJsZWQpIHtcbiAgICA8ZGl2IGNsYXNzPVwiaXZwdC1jb250ZW50LWNlbGxcIiBzdHlsZT1cIndpZHRoOiAzNnB4O1wiIHJvbGU9XCJncmlkY2VsbFwiPlxuICAgICAgPGRpdiBjbGFzcz1cIml2cHQtcm93LXNlbGVjdFwiIHJvbGU9XCJwcmVzZW50YXRpb25cIiBzdHlsZT1cIndpZHRoOiBpbmhlcml0O1wiPlxuICAgICAgICA8aW5wdXQgdHlwZT1cImNoZWNrYm94XCJcbiAgICAgICAgICBjbGFzcz1cIml2cHQtcm93LXNlbGVjdC1jaGVja2JveFwiXG4gICAgICAgICAgdGFiaW5kZXg9XCItMVwiXG4gICAgICAgICAgbmFtZT1cImR0X3Jvd19zZWxlY3RcIlxuICAgICAgICAgIFtjaGVja2VkXT1cInJvd0RhdGEuZHRTZWxlY3RlZFwiXG4gICAgICAgICAgKGNoYW5nZSk9XCJ3aGVuUm93U2VsZWN0ZWQoJGV2ZW50LCByb3dEYXRhKVwiXG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgfVxuICBAZm9yIChjb2xJdGVtIG9mIGNvbHVtbnM7IHRyYWNrIGNvbEl0ZW07IGxldCBpPSRpbmRleCkge1xuICAgIEBpZiAoY29sSXRlbS52aXNpYmxlKSB7XG4gICAgICA8ZGl2IFxuICAgICAgICBjbGFzcz1cIml2cHQtY29udGVudC1jZWxsXCIgXG4gICAgICAgIHJvbGU9XCJncmlkY2VsbFwiIFxuICAgICAgICBhdHRyLmFyaWEtY29saW5kZXg9XCJ7e2krMX19XCIgXG4gICAgICAgIFtzdHlsZS53aWR0aC5weF09XCJjb2xJdGVtLndpZHRoXCJcbiAgICAgID5cbiAgICAgICAge3tyb3dEYXRhW2NvbEl0ZW0uZmllbGRdfX1cbiAgICAgIDwvZGl2PlxuICAgIH0gIFxuICB9XG48L2Rpdj5cbiJdfQ==
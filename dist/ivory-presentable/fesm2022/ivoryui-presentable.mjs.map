{"version":3,"file":"ivoryui-presentable.mjs","sources":["../../../projects/ivory-presentable/src/lib/helpers/click-outside.directive.ts","../../../projects/ivory-presentable/src/lib/services/element-manager.service.ts","../../../projects/ivory-presentable/src/lib/config/config.ts","../../../projects/ivory-presentable/src/lib/services/column-sizing.service.ts","../../../projects/ivory-presentable/src/lib/components/presentable-column-resizer/presentable-column-resizer.directive.ts","../../../projects/ivory-presentable/src/lib/components/presentable-column-resizer/presentable-column-resizer.component.ts","../../../projects/ivory-presentable/src/lib/components/presentable-column-controls/presentable-column-controls.component.ts","../../../projects/ivory-presentable/src/lib/components/presentable-column-controls/presentable-column-controls.component.html","../../../projects/ivory-presentable/src/lib/services/page-manager.service.ts","../../../projects/ivory-presentable/src/lib/components/presentable-paginator/presentable-paginator.component.ts","../../../projects/ivory-presentable/src/lib/components/presentable-paginator/presentable-paginator.component.html","../../../projects/ivory-presentable/src/lib/components/filters/presentable-text-filter/presentable-text-filter.component.ts","../../../projects/ivory-presentable/src/lib/services/filter-manager.service.ts","../../../projects/ivory-presentable/src/lib/components/filters/presentable-options-filter/presentable-options-filter.component.ts","../../../projects/ivory-presentable/src/lib/components/filters/presentable-options-filter/presentable-options-filter.component.html","../../../projects/ivory-presentable/src/lib/components/presentable-row/presentable-row.component.ts","../../../projects/ivory-presentable/src/lib/components/presentable-row/presentable-row.component.html","../../../projects/ivory-presentable/src/lib/services/data-manager.service.ts","../../../projects/ivory-presentable/src/lib/ivory-presentable.component.ts","../../../projects/ivory-presentable/src/lib/ivory-presentable.component.html","../../../projects/ivory-presentable/src/lib/ivory-presentable.module.ts","../../../projects/ivory-presentable/src/public-api.ts","../../../projects/ivory-presentable/src/ivoryui-presentable.ts"],"sourcesContent":["import { Directive, ElementRef, Output, EventEmitter, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[presentableClickOutside]'\n})\nexport class ClickOutsideDirective {\n\n  constructor(\n    private elementRef: ElementRef\n  ) { }\n\n  @Output() clickOutside = new EventEmitter<Event>();\n\n  @HostListener('document:click', ['$event'])\n  onClick(event: Event) {\n    const clickedInside = this.elementRef.nativeElement.contains(event.target);\n    if (!clickedInside) {\n      this.clickOutside.emit(event);\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ElementManagerService {\n  datagrid: HTMLElement | undefined;\n  datagridHeader: HTMLElement | undefined;\n  datagridBody: HTMLElement | undefined;\n  datagridSelectAll: HTMLElement | undefined;\n\n  registerDatagridEl(datagrid: HTMLElement) {\n    this.datagrid = datagrid;\n  }\n\n  getDatagridEl(): HTMLElement | undefined {\n    return this.datagrid;\n  }\n\n  getDatagridElDimenstions(): any {\n    return this.datagrid?.getBoundingClientRect() || {};\n  }\n\n  registerDatagridHeaderEl(datagridHeader: HTMLElement) {\n    this.datagridHeader = datagridHeader;\n  }\n\n  getDatagridHeaderEl(): HTMLElement | undefined {\n    return this.datagridHeader;\n  }\n\n  registerDatagridSelectAllEl(datagridHeader: HTMLElement) {\n    this.datagridSelectAll = datagridHeader;\n  }\n\n  getDatagridSelectAllEl(): HTMLElement | undefined {\n    return this.datagridSelectAll;\n  }\n\n  getDatagridHeaderElDimenstions(): any {\n    return this.datagridHeader?.getBoundingClientRect() || {};\n  }\n\n  registerDatagridBodyEl(datagridBody: HTMLElement) {\n    this.datagridBody = datagridBody;\n  }\n\n  getDatagridBodyEl(): HTMLElement | undefined {\n    return this.datagridBody;\n  }\n}\n","export const PRESENTABLE_CONFIG = {\n  headerSpace: {\n    height: 45\n  },\n  filterSpace: {\n    height: 45,\n  },\n  column: {\n    headHeight: 45,\n    minWidth: 80\n  },\n  paginator: {\n    height: 45\n  }\n}","import { Injectable, inject } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { PRESENTABLE_CONFIG } from '../config/config';\nimport { ElementManagerService } from './element-manager.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ColumnSizingService {\n\n  reCalcWidth: Subject<any> = new Subject();\n  elementManager: ElementManagerService = inject(ElementManagerService);\n\n  constructor() { }\n\n  processColumnOptions(columns: any) {\n    return columns.map((column: any) => {\n      column.initialWidth = column.width || 0;\n      column.minWidth = column.minWidth || PRESENTABLE_CONFIG.column.minWidth;\n      column.width = Math.max(column.initialWidth,column.minWidth);\n      return column;\n    })\n  }\n\n  getColumnsTotWidth(columns: any): number {\n    let totWidth = 0;\n    columns.forEach((column: any) => {\n      if (!column.visible) {\n        return;\n      }\n      totWidth += +(column.width || 0);\n    });\n    return totWidth;\n  }\n\n  getAvailableWidth(columns: any) {\n    let headerEl = this.elementManager.getDatagridEl();\n    let recordSelectionEl = this.elementManager.getDatagridSelectAllEl();\n    return (headerEl as HTMLElement).getBoundingClientRect()?.width - this.getColumnsTotWidth(columns) - (recordSelectionEl as HTMLElement).getBoundingClientRect()?.width;\n  }\n\n  reCalcColumnWidth(columns: any) {\n    let spaceAvailable: number = this.getAvailableWidth(columns);\n    let bodyEl = this.elementManager.getDatagridBodyEl();\n    let scrollbarWidth = bodyEl ? bodyEl.offsetWidth - bodyEl.clientWidth : 0;\n    spaceAvailable -= scrollbarWidth;    \n    let flexColumns: any = [], nonFlexColumns: any = [];\n    columns.forEach((column: any) => {\n      if (!column.forcedWidth) {\n        if(!!column.widthGrow && !column.initialWidth) flexColumns.push(column);\n        else nonFlexColumns.push(column);\n      }\n    });\n\n    flexColumns.forEach((column: any) => {\n      const currentWidth = +(column.width || 1);\n      const newWidth = (currentWidth * (column.widthGrow || 1));\n      column.width = newWidth;\n      spaceAvailable -= (newWidth - currentWidth);\n    });\n\n    if (spaceAvailable > 0) {\n      if (nonFlexColumns.length) {\n        let dividedWidth = Math.floor(spaceAvailable / nonFlexColumns?.length);\n        nonFlexColumns.forEach((column: any) => {\n          const currentWidth = +(column.width || 0);\n          column.width = currentWidth + dividedWidth;\n        });\n      }\n    }\n    return columns;\n  }\n}\n","import { DOCUMENT } from '@angular/common';\nimport { AfterViewInit, Directive, ElementRef, EventEmitter, HostBinding, HostListener, Inject, Input, NgZone, OnInit, Output, inject } from '@angular/core';\nimport { Subject, fromEvent, map, switchMap, takeUntil, tap } from 'rxjs';\n\nimport { ColumnSizingService } from '../../services/column-sizing.service';\nimport { ElementManagerService } from '../../services/element-manager.service';\n\n@Directive({\n  selector: '[presentableColumnResizer]'\n})\nexport class ColumnResizeDirective implements OnInit, AfterViewInit{\n\n  @Input() minWidth: number | string | undefined = '';\n\n  @Input() maxWidth: number | string | undefined = '';\n\n  @Output() updatedColumnWidth: EventEmitter<number> = new EventEmitter();\n\n  @HostBinding('class.resizing')\n  get isColumnResizing() {\n    return this.isResizing;\n  }\n\n  mouseDown: Subject<any> = new Subject();\n  mouseMove: Subject<any> = new Subject();\n  mouseUp: Subject<any> = new Subject();\n  columnOffsetLeft: number = 0;\n  isResizing: boolean = false;\n  defaultResizerHeight: number = 0;\n\n  destroy$: Subject<boolean> = new Subject();\n  columnContainerElement: HTMLElement | null | undefined;\n  elementManager: ElementManagerService = inject(ElementManagerService);\n\n  constructor(\n    public zone: NgZone,\n    private columnSizing: ColumnSizingService,\n    private elementRef: ElementRef,\n    @Inject(DOCUMENT) public document: Document,\n  ) {\n\n  }\n\n  ngAfterViewInit(): void {\n    this.defaultResizerHeight = this.elementRef.nativeElement.getBoundingClientRect().height;\n    \n    this.mouseDown.pipe(\n      takeUntil(this.destroy$),\n      map((event: MouseEvent) => event.clientX),\n      switchMap((startOffset: number) => this.mouseMove.pipe(\n        takeUntil(this.mouseUp),\n        map((event: MouseEvent) => event.clientX - startOffset)\n        )\n      )\n    ).subscribe((offsetX) => {\n      this.isResizing = true;\n      this.addColumnResizeStyle();\n      const totWidth = this.columnOffsetLeft + offsetX\n      let newWidth = totWidth;\n      if (!!this.maxWidth) {\n        // newWidth = totWidth > +this.maxWidth! ? +this.maxWidth! : +totWidth;\n        newWidth = Math.min(newWidth, +this.maxWidth!);\n      }\n      if (!!this.minWidth) {\n        // newWidth = totWidth < +this.minWidth! ? +this.minWidth! : +totWidth;\n        newWidth = Math.max(newWidth, +this.minWidth!);\n      }\n      this.updateColumnWidth(newWidth);\n      this.updatedColumnWidth.emit(newWidth);\n    })\n  }\n\n  updateColumnWidth(newWidth: number) {\n    if (this.columnContainerElement) this.columnContainerElement.style.width =`${newWidth}px`;\n  }\n\n  addColumnResizeStyle() {\n    // const datagridHeight = this.elementManager.getDatagridElDimenstions()?.height;\n    // if (this.isResizing) {\n    //   this.elementRef.nativeElement.style.height = `${datagridHeight - 10}px`;\n    // } else {\n    //   this.elementRef.nativeElement.style.height = `${datagridHeight}px`;\n    // }\n  }\n\n  @HostListener('mousedown', ['$event'])\n  mouseDownEvent(event: MouseEvent) {\n    event.preventDefault();\n    this.columnContainerElement = (event.target as HTMLElement).parentElement?.parentElement?.parentElement;\n    this.columnOffsetLeft = event.clientX - (this.columnContainerElement?.getBoundingClientRect()?.left || 0);\n    this.mouseDown.next(event);\n  }\n\n  ngOnInit(): void {\n    this.zone.runOutsideAngular(() => {\n      fromEvent(this.document.body, 'mousemove').pipe(\n        takeUntil(this.destroy$)\n      ).subscribe((event) => {\n        event.preventDefault();\n        this.mouseMove.next(event);\n      });\n\n      fromEvent(this.document.body, 'mouseup').pipe(\n        takeUntil(this.destroy$)\n      ).subscribe((event) => {\n        event.preventDefault();\n        if (this.isResizing) {\n          this.isResizing = false;\n          this.addColumnResizeStyle();\n          this.columnSizing.reCalcWidth.next(true);\n        }\n        this.mouseUp.next(event);\n      });\n\n      fromEvent(window, 'resize').pipe(\n        takeUntil(this.destroy$)\n      ).subscribe((event) => {\n        event.preventDefault();\n        this.columnSizing.reCalcWidth.next(true);\n      });\n    })\n  }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'presentable-column-resizer',\n  template: `\n    <div class=\"ivpt-resize-anchor\"\n      presentableColumnResizer\n      [ngClass]=\"{'ivpt-resize-handle': resizable, 'ivpt-resize-not-allowed': !resizable}\"\n      (updatedColumnWidth)=\"updatedColumnWidth.emit(+$event)\"\n    ></div>\n  `,\n  styleUrl: './presentable-column-resizer.component.scss'\n})\nexport class PresentableColumnResizerComponent {\n\n  @Input() resizable: boolean = false;\n\n  @Input() minWidth: number | string | undefined = '';\n\n  @Input() maxWidth: number | string | undefined = '';\n\n  @Output() updatedColumnWidth: EventEmitter<number> = new EventEmitter();\n\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { ColumnSizingService } from '../../services/column-sizing.service';\n\n@Component({\n  selector: 'presentable-column-controls',\n  templateUrl: './presentable-column-controls.component.html',\n  styleUrl: './presentable-column-controls.component.scss'\n})\nexport class PresentableColumnControlsComponent {\n\n  _showController: boolean = false;\n  draggingItem: any;\n  isDraggingOver = false;\n\n  @Input() columns: any;\n\n  @Output() updatedColumns = new EventEmitter; \n\n  constructor(\n    public columnSizing: ColumnSizingService\n  ) {}\n\n  onDragStart(event: DragEvent, item: any) {\n    console.log('drag started');\n    this.draggingItem = item;\n  }\n\n  onDragOver(event: DragEvent) {\n    event.preventDefault();\n    console.log('dragging');\n  }\n\n  onDrop(event: DragEvent, index: number) {\n    console.log('dropped', index);\n    if (this.draggingItem) {\n      const draggingIndex = this.columns.indexOf(this.draggingItem);\n      if (draggingIndex > -1) {\n        this.columns.splice(draggingIndex, 1);\n        this.columns.splice(index, 0, this.draggingItem);\n        this.draggingItem = null;\n      }\n    }\n  }\n\n  getDropIndex(event: any) {\n    const target = event.target as HTMLElement;\n    const targetIndex = Array.from(target.parentNode!.children).indexOf(target);\n    return targetIndex;\n  }\n\n  toggleColumn(column: any) {\n    column.visible=!column.visible;\n    this.columnSizing.reCalcWidth.next(true);\n  }\n\n}\n","<div class=\"ivpt-column-controller\">\n  <button class=\"ivpt-column-controller-handle\" (click)=\"_showController=!_showController\">\n    Columns\n  </button>\n  \n  <div \n    class=\"ivpt-column-controller-modal\"\n    [ngStyle]=\"{'visibility': _showController ? 'visible' : 'hidden'}\"\n  >\n    <div class=\"ivpt-column-select-container\">\n      @for (colItem of columns; track colItem; let i=$index) {\n        <div \n          class=\"ivpt-column-select-item\" \n          [ngClass]=\"{'highlighted': isDraggingOver}\"\n          [style.top.rem]=\"(i * 2.4)\"\n          draggable=\"true\"\n          (dragstart)=\"onDragStart($event, colItem)\"\n          (dragover)=\"onDragOver($event)\"\n          (drop)=\"onDrop($event, i)\"\n        >\n          <input \n            type=\"checkbox\" \n            id=\"colItem.field\" \n            value=\"colItem.field\" \n            [checked]=\"colItem.visible\"\n            (change)=\"toggleColumn(colItem)\"\n          >\n          <label for=\"colItem.field\">{{colItem.title}}</label>\n      </div>\n      }\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PageManagerService {\n\n  private currentPageSub: BehaviorSubject<number> = new BehaviorSubject<number>(1);\n  public currentPage$ = this.currentPageSub.asObservable();\n\n  updateCurrentPage(value: number) {\n    this.currentPageSub.next(value);\n  }\n\n  resetPagination() {\n    this.updateCurrentPage(1);\n  }\n\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\nimport { PageManagerService } from '../../services/page-manager.service';\n\ntype Page = {\n  total: number;\n  current: number;\n  goto: number;\n};\n\n@Component({\n  selector: 'presentable-paginator',\n  templateUrl: './presentable-paginator.component.html',\n  styleUrl: './presentable-paginator.component.scss'\n})\nexport class PresentablePaginatorComponent {\n\n  _showPagination: boolean = false;\n  _records: any = {};\n  _page: Page = {\n    'total': 1,\n    'current': 1,\n    'goto': 1\n  };\n\n  @Input() \n  set recordsPerPageOptions(value: any) {\n    this._records.options = value;\n  }\n\n  @Input() \n  set recordsPerPage(value: number) {\n    this._records.perPage = value;\n  }\n\n  @Input() \n  set recordsTotal(value: number) {\n    this._records.total = value;\n    this._page.total = Math.ceil(this._records.total / this._records.perPage);\n    this._showPagination = this._records.total > this._records.perPage;\n  }\n\n  @Output() pageChange: EventEmitter<any> = new EventEmitter();\n\n  constructor(\n    public pageManager: PageManagerService\n  ) {}\n\n  ngOnInit() {\n    // The below current page subscription is being used only for the pagination reset usecase\n    this.pageManager.currentPage$.subscribe((value: number) => {\n      this._page.current = this._page.goto = value;\n    });\n  }\n\n  updatePerPageRecords() {\n    this._page.goto = this._page.current = 1;\n    this._page.total = Math.ceil(this._records.total / this._records.perPage);\n    this.pageChange.emit({ 'from': 1, 'to': this._records.perPage })\n  }\n  \n  goto(pageNumber: number | null) {\n    if (pageNumber!==null && pageNumber!==undefined && pageNumber!==this._page.current) { \n      const startRecord = (pageNumber-1) * this._records.perPage;\n      const endRecord = ((startRecord+this._records.perPage) > this._records.total) ? this._records.total : startRecord + this._records.perPage;\n      this.pageChange.emit({ 'from': startRecord, 'to': endRecord });\n\n      this._page.goto = this._page.current = pageNumber;\n    } else {\n      if (this._page.goto < 1) {\n        this._page.goto = 1;\n      } else if (this._page.goto > this._page.total) {\n        this._page.goto = this._page.total;\n      }\n      this.goto(this._page.goto);\n    }\n  }\n\n}\n","<div class=\"ivpt-records-summary\" role=\"status\">\n  <span>\n    {{((_page.current-1)*_records.perPage)+1}}\n  </span>\n  &nbsp;\n  <span> to </span>\n  &nbsp;\n  <span>\n    @if (_records.total < (_page.current*_records.perPage)) {\n      {{_records.total}}\n    } @else {\n      {{_page.current * _records.perPage}}\n    }\n  </span>\n  &nbsp;\n  <span> of </span>\n  &nbsp;\n  <span>\n    {{_records.total}}\n  </span>\n</div>\n\n<div class=\"ivpt-records-options\" role=\"presentation\">\n  <label for=\"records-per-page\" aria-hidden=\"false\">\n    Records per page: \n  </label>\n  &nbsp;\n  <select name=\"perPageOptions\" \n    id=\"records-per-page\" \n    tabindex=\"0\"\n    [(ngModel)]=\"_records.perPage\" \n    (change)=\"updatePerPageRecords()\"\n  >\n    @for (p of _records.options; track p) {\n      <option [value]=\"p\">\n        {{ p }}\n      </option>\n    }\n  </select>\n</div>\n\n<div class=\"ivpt-records-paging\">\n  @if (_showPagination) {\n    <button type=\"button\" \n      aria-label=\"First page\" \n      tabindex=\"0\"\n      class=\"ivpt-paginator-button\" \n      [disabled]=\"_page.current===1\"\n      [attr.aria-disabled]=\"_page.current===1\"\n      (click)=\"goto(1)\"\n    >\n      &laquo;\n    </button>\n    \n    <button type=\"button\" \n      aria-label=\"Previous page\" \n      tabindex=\"0\"\n      class=\"ivpt-paginator-button\" \n      [disabled]=\"_page.current===1\"\n      [attr.aria-disabled]=\"_page.current===1\" \n      (click)=\"goto(_page.current-1)\"\n    >\n      &lsaquo;\n    </button>\n\n    <input\n      class=\"ivpt-paging-input\"\n      type=\"number\"\n      size=\"2\"\n      [(ngModel)]=\"_page.goto\"\n      (keydown.enter)=\"goto(null)\"\n    />\n    <span>{{ ' / '+_page.total }}</span>\n\n    <button type=\"button\"\n      aria-label=\"Next page\" \n      tabindex=\"0\"\n      class=\"ivpt-paginator-button\" \n      [disabled]=\"_page.current===_page.total\" \n      [attr.aria-disabled]=\"_page.current===_page.total\" \n      (click)=\"goto(_page.current+1)\"\n    >\n      &rsaquo;\n    </button>\n\n    <button type=\"button\"\n      aria-label=\"Last page\" \n      tabindex=\"0\"\n      class=\"ivpt-paginator-button\" \n      [disabled]=\"_page.current===_page.total\" \n      [attr.aria-disabled]=\"_page.current===_page.total\" \n      (click)=\"goto(_page.total)\"\n    >\n      &raquo;\n    </button>\n  }\n</div>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'presentable-text-filter',\n  template: `\n    <input \n      class=\"ivpt-filter-input\"\n      type=\"text\" \n      [name]=\"column.field\"\n      id=\"{{column.field}}\"\n      [(ngModel)]=\"_keyword\"\n      (keydown.enter)=\"applyFilter()\" \n    />\n  `,\n  styles: `\n    .ivpt-filter-input {\n      width: 100%;\n    }\n  `\n})\nexport class PresentableTextFilterComponent {\n\n  _keyword: string = '';\n\n  @Input() column: any;\n\n  @Output() whenApplied = new EventEmitter<any>();\n  emitApplied(value: any) {\n    this.whenApplied.emit(value);\n  }\n\n  applyFilter() {\n    console.log('The keyword is - ', this._keyword);\n    this.emitApplied({'column': this.column['field'], 'type': this.column['filterType'], 'keyword': this._keyword});\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilterManagerService {\n\n  public queryModel: any = {};\n\n  constructor() { }\n\n  processFilterOptions(arr: any) {\n    let temp = [];\n    for (const i of arr) {\n      temp.push({ option: i, isSelected: false });\n    }\n    return temp;\n  }\n\n  buildQueryModel(data: any) {\n    if (this.queryModel[data.column]===undefined || this.queryModel[data.column]===null) {\n      this.queryModel[data.column] = {};\n    }\n    \n    if (data.type==='options') {\n      if (data.values.length > 0) {\n        this.queryModel[data.column]['type'] = data['type'];\n        this.queryModel[data.column]['values'] = data['values'];\n      } else {\n        delete this.queryModel[data.column];\n      }\n    } else if (data.type==='text') {\n      if (data.keyword!=='') {\n        this.queryModel[data.column]['type'] = data['type'];\n        this.queryModel[data.column]['keyword'] = data['keyword'];\n      } else {\n        delete this.queryModel[data.column];\n      }\n    }\n  }\n\n  getQueryModel() {\n    return this.queryModel;\n  }\n\n  resetQueryModel() {\n    this.queryModel = {};\n  }\n\n  filterData(data: any, query: any) {\n    const filtered = data.filter((item: any) => {\n      for (let key in query) {\n        if (query[key]['type']==='text') {\n          const regexp = new RegExp(query[key]['keyword'], 'i');\n          if (!regexp.test(item[key])) {\n            return false;\n          }\n        } else if (query[key]['type']==='options') {\n          if (!query[key]['values'].includes(item[key])) {\n            return false;\n          }\n        }\n      }\n      return true;\n    });\n    return filtered;\n  }\n\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\nimport { FilterManagerService } from '../../../services/filter-manager.service';\n\n@Component({\n  selector: 'presentable-options-filter',\n  templateUrl: './presentable-options-filter.component.html',\n  styleUrl: './presentable-options-filter.component.scss'\n})\nexport class PresentableOptionsFilterComponent {\n\n  _showPopover: boolean = false;\n\n  _taxonomy: any = [];\n\n  @Input() column: any;\n\n  @Input() \n  set taxonomy(value: any) {\n    this._taxonomy = this.filterManager.processFilterOptions(value);\n  }\n  get taxonomy() {\n    return this._taxonomy;\n  }\n\n  @Output() whenApplied = new EventEmitter<any>();\n  emitApplied(value: any) {\n    this.whenApplied.emit(value);\n  }\n\n  constructor(\n    public filterManager: FilterManagerService\n  ) {}\n  \n\n  toggleFilterPopover() {\n    this._showPopover=!this._showPopover;\n  }\n\n  applyFilter() {\n    this.toggleFilterPopover();\n    let appliedObjects: any = [];\n    for (const item of this._taxonomy) {\n      if (item['isSelected']===true) {\n        appliedObjects.push(item['option']);\n      }\n    }\n    this.emitApplied({'column': this.column['field'], 'type': this.column['filterType'], 'values': appliedObjects});\n  }\n\n}\n","<button \n  class=\"ivpt-filter-trigger\"\n  [id]=\"'filter_handle_'+column.field\"\n  (click)=\"toggleFilterPopover()\"\n>\n  Filter\n</button>\n@if (_showPopover) {\n  <div\n    class=\"ivpt-filter-popover\" \n    aria-label=\"filter options\" \n    role=\"presentation\"\n  >\n    <ul class=\"ivpt-filter-options\">\n      @for (optionItem of _taxonomy; track optionItem) {\n        <li class=\"ivpt-filter-option\">\n          <input \n            type=\"checkbox\" \n            [name]=\"optionItem.option\" \n            id=\"{{column.field}}_{{optionItem.option}}\"\n            [(ngModel)]=\"optionItem.isSelected\"\n          />\n          <label class=\"filter-option-label\" for=\"{{column.field}}_{{optionItem.option}}\">\n            {{optionItem.option}}\n          </label>\n        </li>\n      }\n    </ul>\n    <button class=\"ivpt-filter-apply\" (click)=\"applyFilter()\">Apply</button>\n  </div>\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'presentable-row',\n  templateUrl: './presentable-row.component.html',\n  styleUrl: './presentable-row.component.scss'\n})\nexport class PresentableRowComponent {\n\n  @Input() columns: any;\n\n  @Input() rowIndex: any;\n\n  @Input() rowSelectionEnabled: any;\n\n  @Input() rowData: any;\n\n  @Output() onSelection = new EventEmitter<any>();\n\n  whenRowSelected($event: any, rowData: any) {\n    this.onSelection.emit({'selected': $event.target.checked, 'row': rowData});\n  }\n\n}\n","<div \n  class=\"ivpt-content-row\" \n  role=\"row\"\n  attr.aria-rowindex=\"{{rowIndex+2}}\" \n  attr.row-index=\"{{rowIndex}}\"\n>\n  @if (rowSelectionEnabled) {\n    <div class=\"ivpt-content-cell\" style=\"width: 36px;\" role=\"gridcell\">\n      <div class=\"ivpt-row-select\" role=\"presentation\" style=\"width: inherit;\">\n        <input type=\"checkbox\"\n          class=\"ivpt-row-select-checkbox\"\n          tabindex=\"-1\"\n          name=\"dt_row_select\"\n          [checked]=\"rowData.dtSelected\"\n          (change)=\"whenRowSelected($event, rowData)\"\n        />\n      </div>\n    </div>\n  }\n  @for (colItem of columns; track colItem; let i=$index) {\n    @if (colItem.visible) {\n      <div \n        class=\"ivpt-content-cell\" \n        role=\"gridcell\" \n        attr.aria-colindex=\"{{i+1}}\" \n        [style.width.px]=\"colItem.width\"\n      >\n        {{rowData[colItem.field]}}\n      </div>\n    }  \n  }\n</div>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataManagerService {\n\n  canSelectAll(dataSet: any) {\n    for (let i=0; i<dataSet.length; i++) {\n      if (!dataSet[i].isSelected) {\n        return false;\n      }\n    }\n  }\n\n}\n","import {\n  Component,\n  Input,\n  ElementRef,\n  Output,\n  EventEmitter,\n  ViewChild,\n  OnInit,\n  AfterViewInit,\n  ChangeDetectorRef,\n  OnDestroy,\n} from \"@angular/core\";\nimport { delay } from \"rxjs\";\n\nimport { PRESENTABLE_CONFIG } from \"./config/config\";\nimport { DataManagerService } from \"./services/data-manager.service\";\nimport { PageManagerService } from \"./services/page-manager.service\";\nimport { ColumnSizingService } from \"./services/column-sizing.service\";\nimport { ElementManagerService } from \"./services/element-manager.service\";\nimport { FilterManagerService } from \"./services/filter-manager.service\";\n\n@Component({\n  selector: \"ivory-presentable\",\n  templateUrl: \"./ivory-presentable.component.html\",\n  styleUrl: \"./ivory-presentable.component.scss\",\n})\nexport class IvoryPresentableComponent\n  implements OnInit, OnDestroy, AfterViewInit\n{\n  // Records Data\n  dataTrueCopy: any;\n  processedData: any;\n  currVisibleData: any;\n  unSortedCopy: any;\n\n  // Sorting\n  _isSortApplied = false;\n  _sortAppliedOn = \"\";\n  _sortOrder: string | null = null;\n\n  // Filtering\n  _isFilterApplied = false;\n  filterModel: any = {};\n\n  _recordsTotal: number = 0;\n\n  // Grid rendering\n  _isGridReady = false;\n\n  // data params when the data source is remote (server-side)\n  remoteDataParams: any = {\n    filterConfig: {},\n    sortBy: null,\n    orderBy: null,\n    recordsFrom: null,\n    recordsTo: null\n  };\n\n  // Row Selection\n  selectedRows: any = [];\n\n  @Input() gridDefs: any;\n\n  // @Input() columnDefs: any;\n  _columnDefs: any;\n\n  @Input() set columnDefs(columnDefs: any) {\n    this._columnDefs = this.columnSizing.processColumnOptions(columnDefs);\n  }\n  get columnDefs() {\n    return this._columnDefs;\n  }\n\n  @Input() columnControls: boolean = false;\n\n  @Input() set records(value: any) {\n    this.dataTrueCopy = value;\n    Object.freeze(this.dataTrueCopy);\n    this.processData();\n  }\n  get records() {\n    return this.dataTrueCopy;\n  }\n\n  @Input() pagination: boolean = false;\n\n  @Input() recordsPerPage: number = 0;\n\n  @Input() recordsPerPageOptions: any;\n\n  @Input() recordSelection: boolean = false;\n\n  @Output() dataparams = new EventEmitter<any>();\n\n  @Output() recordsSelected = new EventEmitter<any>();\n\n  @ViewChild(\"ivptSelectAll\") ivptSelectAllRef!: ElementRef;\n\n  @ViewChild(\"ivptContentBody\") ivptContentBodyRef: ElementRef | undefined;\n\n  @ViewChild(\"datagridWrapper\") datagridWrapper!: ElementRef;\n\n  @ViewChild(\"datagridHeaderWrapper\") datagridHeaderWrapper!: ElementRef;\n\n  @ViewChild(\"datagridBodyWrapper\") datagridBodyWrapper!: ElementRef;\n\n  ngAfterViewInit() {\n    this.elementManager.registerDatagridEl(this.datagridWrapper.nativeElement);\n    this.elementManager.registerDatagridHeaderEl(\n      this.datagridHeaderWrapper.nativeElement\n    );\n    this.elementManager.registerDatagridSelectAllEl(\n      this.ivptSelectAllRef.nativeElement\n    );\n    this.elementManager.registerDatagridBodyEl(\n      this.datagridBodyWrapper.nativeElement\n    );\n\n    if (this.ivptContentBodyRef) {\n      this.ivptContentBodyRef.nativeElement.style.height =\n        this.gridDefs.height -\n        (PRESENTABLE_CONFIG.headerSpace.height +\n          PRESENTABLE_CONFIG.column.headHeight +\n          PRESENTABLE_CONFIG.filterSpace.height +\n          PRESENTABLE_CONFIG.paginator.height) +\n        \"px\";\n    }\n    this.columnSizing.reCalcWidth.next(true);\n  }\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private columnSizing: ColumnSizingService,\n    private elementManager: ElementManagerService,\n    public dataManager: DataManagerService,\n    public pageManager: PageManagerService,\n    public filterManager: FilterManagerService\n  ) {}\n\n  ngOnInit() {\n    this.addListeners();\n  }\n\n  processData() {\n    if (this.gridDefs.dataStream===\"server-side\") {\n      this.processRemoteData();\n      this._isGridReady = true;\n    } else if (this.gridDefs.dataStream===\"client-side\") {\n      this.processLocalData();\n      this._isGridReady = true;\n    }\n    setTimeout(() => {\n      this.columnSizing.reCalcWidth.next(true);\n    }, 2000);\n  }\n\n  processRemoteData(data?: any) {\n    this.processedData = data || structuredClone(this.dataTrueCopy);\n    this.currVisibleData = this.processedData;\n    this._recordsTotal = this.gridDefs.recordsTotal;\n    this.pagination = this._recordsTotal > this.processedData.length;\n  }\n\n  processLocalData(data?: any) {\n    this.processedData = data || structuredClone(this.dataTrueCopy);\n    if (!this.pagination) {\n      this.currVisibleData = this.processedData;\n    } else {\n      this._recordsTotal = this.processedData.length;\n      this.setCurrVisibleData(0, this.recordsPerPage);\n    }\n  }\n\n  setCurrVisibleData(from: number, to: number) {\n    this.currVisibleData = this.processedData.slice(from, to);\n  }\n\n  addListeners() {\n    this.columnSizing.reCalcWidth.pipe(delay(100)).subscribe(() => {\n      this.columnSizing.reCalcColumnWidth(this.columnDefs);\n      this.cdr.detectChanges();\n    });\n  }\n\n  updatedColumnWidth(colItem: any, width: any) {\n    colItem.width = width;\n  }\n\n  // Handles sorting\n  doSort(appliedField: string) {\n    this.pageManager.resetPagination();\n    if (this._isSortApplied && this._sortAppliedOn === appliedField) {\n      if (this._sortOrder === \"ASC\") {\n        this._sortOrder = \"DESC\";\n        this.sortBy(appliedField, \"DESC\");\n      } else if (this._sortOrder === \"DESC\") {\n        this.resetSort();\n      }\n    } else {\n      this._isSortApplied = true;\n      this._sortAppliedOn = appliedField;\n      this._sortOrder = \"ASC\";\n      this.unSortedCopy = structuredClone(this.processedData);\n      this.sortBy(appliedField, \"ASC\");\n    }\n  }\n\n  sortBy(theField: any, orderBy: string) {\n    if (this.gridDefs.dataStream===\"server-side\") {\n      this.remoteDataParams.sortBy = theField;\n      this.remoteDataParams.orderBy = orderBy;\n      this.remoteDataParams.recordsFrom = 0;\n      this.remoteDataParams.recordsTo = null;\n      this.dataparams.emit(this.remoteDataParams);\n    } else if (this.gridDefs.dataStream===\"client-side\") {\n      if (orderBy === \"ASC\") {\n        this.processedData.sort((a: any, b: any) =>\n          a[theField] > b[theField] ? 1 : -1\n        );\n      } else if (orderBy === \"DESC\") {\n        this.processedData.sort((a: any, b: any) =>\n          a[theField] > b[theField] ? -1 : 1\n        );\n      }\n      this.setCurrVisibleData(0, this.recordsPerPage);\n    }\n  }\n\n  resetSort() {\n    this._isSortApplied = false;\n    this._sortAppliedOn = \"\";\n    this._sortOrder = null;\n    this.processedData = structuredClone(this.unSortedCopy);\n    this.setCurrVisibleData(0, this.recordsPerPage);\n  }\n\n  /**\n   * Invokes when any filter applied\n   * @param data\n   */\n  handleFilters(data: any) {\n    this.filterManager.buildQueryModel(data);\n    if (this.gridDefs.dataStream===\"server-side\") {\n      this.remoteDataParams.filterConfig = this.filterManager.getQueryModel();\n      this.remoteDataParams.recordsFrom = 0;\n      this.remoteDataParams.recordsTo = this.recordsPerPage;\n      this.dataparams.emit(this.remoteDataParams);\n    } else if (this.gridDefs.dataStream===\"client-side\") {\n      this.processFilter(data);\n    }\n  }\n\n  processFilter(data: any) {\n    let result: any = [];\n    const queryModel = this.filterManager.getQueryModel();\n    if (Object.keys(queryModel).length !== 0) {\n      let tempDataSet = structuredClone(this.records);\n      result = this.filterManager.filterData(tempDataSet, queryModel);\n    } else {\n      result = structuredClone(this.records);\n    }\n    this.processLocalData(result);\n  }\n\n  resetFiltering() {\n    if (this.gridDefs.dataStream===\"server-side\") {\n      this.remoteDataParams.filterConfig = {}\n      this.remoteDataParams.recordsFrom = 0;\n      this.remoteDataParams.recordsTo = this.recordsPerPage;\n      this.dataparams.emit(this.remoteDataParams);\n    } else if (this.gridDefs.dataStream===\"client-side\") {\n      this.processLocalData();\n      this.filterManager.resetQueryModel();\n    }\n  }\n\n  onPaginationChange(data: any) {\n    if (this.gridDefs.dataStream===\"server-side\") {\n      this.remoteDataParams.recordsFrom = data.from;\n      this.remoteDataParams.recordsTo = data.to;\n      this.dataparams.emit(this.remoteDataParams);\n    } else if (this.gridDefs.dataStream===\"client-side\") {\n      this.setCurrVisibleData(data.from, data.to);\n    }\n  }\n\n  whenSelectAll($event: any): void {\n    const status = $event.target.checked;\n    for (let item of this.currVisibleData) {\n      item[\"dtSelected\"] = status;\n      if (status) {\n        this.selectedRows.push(item);\n      }\n    }\n    this.recordsSelected.emit(this.selectedRows);\n  }\n\n  whenSelectRow(data: any) {\n    if (data.selected) {\n      data.row[\"isSelected\"] = true;\n      this.selectedRows.push(data.row);\n      if (!this.dataManager.canSelectAll(this.currVisibleData)) {\n        this.ivptSelectAllRef.nativeElement.children[0].indeterminate = true;\n      } else {\n        this.ivptSelectAllRef.nativeElement.children[0].checked = true;\n      }\n    } else {\n      data.row[\"isSelected\"] = false;\n      const index = this.selectedRows.indexOf(data.row);\n      this.selectedRows.splice(index, 1);\n      if (this.selectedRows.length > 0) {\n        this.ivptSelectAllRef.nativeElement.children[0].indeterminate = true;\n      } else {\n        this.ivptSelectAllRef.nativeElement.children[0].indeterminate = false;\n        this.ivptSelectAllRef.nativeElement.children[0].checked = false;\n      }\n    }\n    this.recordsSelected.emit(this.selectedRows);\n  }\n\n  ngOnDestroy() {\n    this._isGridReady = false;\n    this.remoteDataParams = {};\n    this.selectedRows = [];\n  }\n}\n","<div class=\"ivpt-container\" [ngStyle]=\"{ 'height.px': gridDefs.height }\" #datagridWrapper>\n  @if (!_isGridReady) {\n    <ng-container *ngTemplateOutlet=\"presentableFallbackTemplate\"></ng-container>\n  }\n  @else {\n    <!-- Datatable Header -->\n    <div class=\"ivpt-header\">\n      @if (columnControls) {\n        <presentable-column-controls\n          [columns]=\"columnDefs\"\n        ></presentable-column-controls>\n      }\n    </div>\n\n    <!-- Datatable Content -->\n    <div class=\"ivpt-content\">\n\n      <!-- Column headings of the table -->\n      <div #datagridHeaderWrapper class=\"ivpt-content-head\" role=\"row\" aria-rowindex=\"1\">\n        @if (recordSelection) {\n          <div class=\"ivpt-head-column-cell-wrapper\">\n            <div #ivptSelectAll class=\"ivpt-selectall-cell\">\n              <input type=\"checkbox\"\n                class=\"ivpt-all-select-checkbox\"\n                tabindex=\"-1\"\n                id=\"selectall\"\n                (change)=\"whenSelectAll($event)\"\n              />\n            </div>\n            <div class=\"ivpt-filter-cell\" style=\"width: 36px;\"></div>\n          </div>\n        }\n        @for (colItem of columnDefs; track colItem; let i=$index) {\n          @if (colItem.visible) {\n            <div class=\"ivpt-head-column-cell-wrapper\">\n              <div \n                class=\"ivpt-head-cell\" \n                role=\"columnheader\" \n                attr.aria-colindex=\"{{i+1}}\" \n                (click)=\"doSort(colItem.field)\"\n                [style.width.px]=\"colItem.width\"\n              >\n                <div class=\"ivpt-column-title\">\n                  {{colItem.title}}\n                  @if (_isSortApplied && _sortAppliedOn===colItem.field) {\n                    @if (_sortOrder==='ASC') {\n                      <span class=\"ivpt-sort-identifier\"> &uarr;</span>\n                    }\n                    @else if (_sortOrder==='DESC') {\n                      <span class=\"ivpt-sort-identifier\"> &darr;</span>\n                    }\n                  }\n                </div>\n                <div class=\"ivpt-column-ext\">\n                  <presentable-column-resizer \n                    [resizable]=\"true\" \n                    (updatedColumnWidth)=\"updatedColumnWidth(colItem, $event)\"\n                  ></presentable-column-resizer>\n                </div>\n              </div>\n              <div \n                class=\"ivpt-filter-cell\"\n                [style.width.px]=\"colItem.width\"\n              >\n                @if (colItem.hasFilter && colItem.filterType==='text') {\n                  <presentable-text-filter\n                    [column]=\"colItem\"\n                    (whenApplied)=\"handleFilters($event)\"\n                  ></presentable-text-filter>\n                }\n                @else if (colItem.hasFilter && colItem.filterType==='options') {\n                  <presentable-options-filter\n                    [column]=\"colItem\"\n                    [taxonomy]=\"colItem.filterOptions\"\n                    (whenApplied)=\"handleFilters($event)\"\n                  ></presentable-options-filter>\n                }\n              </div>\n            </div>\n              \n          }\n        }\n      </div>\n\n      <!-- Table rows -->\n      <div #ivptContentBody class=\"ivpt-content-body\" role=\"rowgroup\" #datagridBodyWrapper>\n        @for (dataItem of currVisibleData; track dataItem; let i=$index) {\n          <presentable-row\n            [columns]=\"columnDefs\"\n            [rowIndex]=\"i\"\n            [rowSelectionEnabled]=\"recordSelection\"\n            [rowData]=\"dataItem\"\n            (onSelection)=\"whenSelectRow($event)\"\n          ></presentable-row>\n        }\n      </div>\n\n    </div>\n\n    <!-- Datatable Footer -->\n    <div class=\"ivpt-footer\">\n      @if (pagination) {\n        <presentable-paginator\n          [recordsPerPageOptions]=\"recordsPerPageOptions\"\n          [recordsPerPage]=\"recordsPerPage\"\n          [recordsTotal]=\"_recordsTotal\"\n          (pageChange)=\"onPaginationChange($event)\"\n        ></presentable-paginator>\n      }\n    </div>\n  }\n\n  <ng-template #presentableFallbackTemplate>\n    <div>Loading...</div>\n  </ng-template>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\n\n/* Components */\nimport { IvoryPresentableComponent } from './ivory-presentable.component';\nimport { PresentableRowComponent } from './components/presentable-row/presentable-row.component';\nimport { PresentableColumnResizerComponent } from './components/presentable-column-resizer/presentable-column-resizer.component';\nimport { PresentableColumnControlsComponent } from './components/presentable-column-controls/presentable-column-controls.component';\nimport { PresentablePaginatorComponent } from './components/presentable-paginator/presentable-paginator.component';\nimport { PresentableTextFilterComponent } from './components/filters/presentable-text-filter/presentable-text-filter.component';\nimport { PresentableOptionsFilterComponent } from './components/filters/presentable-options-filter/presentable-options-filter.component';\n\n/* Directives */\nimport { ClickOutsideDirective } from './helpers/click-outside.directive';\nimport { ColumnResizeDirective } from './components/presentable-column-resizer/presentable-column-resizer.directive';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  declarations: [\n    IvoryPresentableComponent,\n    PresentableRowComponent,\n    PresentableTextFilterComponent,\n    PresentableOptionsFilterComponent,\n    PresentableColumnResizerComponent,\n    PresentableColumnControlsComponent,\n    PresentablePaginatorComponent,\n    ClickOutsideDirective,\n    ColumnResizeDirective\n  ],\n  exports: [\n    IvoryPresentableComponent,\n    PresentableRowComponent,\n    PresentableTextFilterComponent,\n    PresentableOptionsFilterComponent,\n    PresentableColumnResizerComponent,\n    PresentableColumnControlsComponent,\n    PresentablePaginatorComponent,\n    ClickOutsideDirective\n  ]\n})\nexport class IvoryPresentableModule { }\n","/**\n * Public API Surface of ivory-presentable\n */\nexport * from './lib/helpers/click-outside.directive';\nexport * from './lib/components/presentable-column-resizer/presentable-column-resizer.directive';\nexport * from './lib/components/presentable-column-resizer/presentable-column-resizer.component';\nexport * from './lib/components/presentable-column-controls/presentable-column-controls.component';\nexport * from './lib/components/presentable-paginator/presentable-paginator.component';\nexport * from './lib/components/filters/presentable-text-filter/presentable-text-filter.component';\nexport * from './lib/components/filters/presentable-options-filter/presentable-options-filter.component';\nexport * from './lib/components/presentable-row/presentable-row.component';\nexport * from './lib/ivory-presentable.component';\nexport * from './lib/ivory-presentable.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1","i2.ColumnResizeDirective","i1.ColumnSizingService","i1.PageManagerService","i2","i1.FilterManagerService","i2.ElementManagerService","i3.DataManagerService","i4.PageManagerService","i5.FilterManagerService","i6","i7.PresentableRowComponent","i8.PresentableTextFilterComponent","i9.PresentableOptionsFilterComponent","i10.PresentableColumnResizerComponent","i11.PresentableColumnControlsComponent","i12.PresentablePaginatorComponent"],"mappings":"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"}